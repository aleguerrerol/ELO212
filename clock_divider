module clock_divider
#(parameter COUNTER_MAX = 1) //1 debería ser PUT_NUMBER_HERE pero error porque no estaría declarado
( input logic clk_in,
  input logic reset,
  output logic clk_out);
  
    localparam DELAY_WIDTH = $clog2(COUNTER_MAX);
    logic [DELAY_WIDTH-1:0] counter = 'd0;
     // resetea el contador e invierte el valor del reloj de salida cada vez que el contador llega a su valor maximo
     
    always_ff @(posedge clk_in) begin
        if  (reset == 1'b1) begin //Reset Sincrónico, setea el contador y la salida a un valor conocido
            counter <= 'd0;
            clk_out <= 0; 
        end else if (counter == COUNTER_MAX-1) begin //Se resetea el contador y se invierte la salida 
            counter <= 'd0;
            clk_out <= ~clk_out;
        end else begin //se incrementa el contador y se mantiene la salida como su valor anterior
        counter <= counter + 'd1;
        clk_out <= clk_out;
        end
    end
endmodule

module simulation(
);
    logic clk;
    logic reset;
    logic out;
    
    MODULE_NAME SIMULATION_NAME(.CLK_NAME(clk), .RESET_NAME(reset), .OUT_NAME(out));
        
    always #5 clk = ~clk; //señal de clk, con timescale de 1ns es un clk de 100Mhz
    initial begin 
        clk=0;
        reset=1;
        #10 reset=0;
    end
    
endmodule
